version: '3.8'

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx/ #where the Dockerfile is (relative to the docker-compose file) 
    ports:
      - "80:80" #host:container (puse 80:80 porque es el puerto por defecto de nginx)
    env_file:
      - .env 
    depends_on: #ya lo descubrir√© en el futuro supongo xd
      - wordpress #idk if it depends on wordpress or not, just testing
    networks:
      - di_caprio #for example
    expose: #expose internal ports of the container without mapping them to the host
      - "80" #still don't know what it is actually
    volumes:
      - nginx:/whatever/route #vol_name:container_path
    restart: always #restart the container if it fails

  mariadb:
    container_name: mariadb 
    build:
      context: ./mariadb/ #idk if I have to put "Dockerfile" or not
#   ports:
#   - "3306:3306" #3306 is the default port for mariadb, but it should be only in the .env
#aparently for safety reasons, it's better to not expose the mariadb port to the host
    env_file:
      - .env
    depends_on:
      - mariadb #if it depends on itself, do I have to put it here?
    networks:
      - di_caprio
    expose:
      - "3306"
    volumes:
      - mariadb:/whatever/route
    restart: always
 
  wordpress:
   container_name: wordpress
    build:
      context: ./wordpress/
    # ports: wordpress doesnt need to be acceded from the host, cause Nginx will work as a intermediary
    env_file:
      - .env
    depends_on:
      - mariadb
    networks:
      - di_caprio
    expose:
    - "9000" #9000 is the default port for wordpress apparently but I have also seen "80" in some examples
    volumes:
      - wordpress:/whatever/route
volumes:
  # I still don't know what do I have to put here :3
networks:
  di_caprio:
    driver: bridge #bridge is the default network driver, it provides a private network shared between the containers and the host, but not with the external world

# -build: donde esta el dockerfile y va a ejecutar el run
# -container_name: nombre del container que en este caso es nginx
# -restart (MIRAR PARA QUE SIRVE REALMENTE)
# -port: Primero va el puerto del host y luego el del container
# -env_file : importa el archivo .env para usar las variables globales
# -depends_on : con esto indicamos que un container depende del otro por lo tanto wordpress depende de mariadb y nginx depende de wordpross y con esto estamos diciendo el orden en el que se van a iniciar los containers, primero mariadb luego wordpress y por ultimo nginx.
# -networks : ponemos eo nombre de la network que hemos creado.
# -expose : para exponer el puerto de los contenedor y no usar port para que no se pueda acceder desde el exterior
# -volumes : con esto ponemos el volumen:/  ponemos el nombre del volumen y la ruta donde queremos montarlo